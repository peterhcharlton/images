function pwv_measurement_fig

% Setup univeral parameters
up = setup_up;

% Load data
data = load_data(up);

% Make plot
plot_handle = make_plot(data, up);

% Save plot
save_plot(plot_handle, up);

end

function up = setup_up

close all

% Paths
% - Path of PWDB file (not required, but allows full analysis to be reproduced. This file is the 'pwdb_data.mat' file available from https://doi.org/10.5281/zenodo.2633174 )
up.paths.pwdb_data_file = '/Users/petercharlton/Documents/Data/Nektar1D/ageing_sims/pwdb_7/exported_data/pwdb_data.mat';
% - Path at which to save figure
[curr_file_path,~,~] = fileparts(mfilename('fullpath'));
up.paths.save_path = [curr_file_path, filesep];

% Options
% - Whether or not to use the data file (if not then the hard-coded data, which is provided in this script, is used instead of data directly from the file)
up.options.use_data_file = false;

% Others
up.no_pws = 4;

end

function data = load_data(up)

fprintf('\n - Loading pulse wave data')

if up.options.use_data_file
    fprintf(' from file')
    data = load_data_from_file(up);
else
    fprintf(' from script')
    data = load_hard_coded_data(up);
end

fprintf('\n - Loading ECG data')
durn = (length(data.bpc.v)-1)/data.bpc.fs;
data.ecg.v = [-0.120000000000000,-0.120000000000000,-0.125000000000000,-0.122500113257034,-0.125000000000000,-0.120000000000000,-0.125000000000000,-0.117500065569862,-0.125000000000000,-0.117499958278698,-0.120000000000000,-0.120000000000000,-0.124999856955537,-0.122500005960186,-0.105000131124091,-0.115000000000000,-0.110000000000000,-0.122499946358326,-0.125000000000000,-0.109999558946239,-0.100000357611158,-0.0899996065808297,-0.0750000000000000,-0.0775001728453928,-0.0850000000000000,-0.0975001490224131,-0.100000000000000,-0.0925001251639052,-0.0949997377518178,-0.0824998986647591,-0.0800000000000000,-0.0800000000000000,-0.100000429133389,-0.0299993562231754,0.464997210632973,0.997500745023246,0.954992990821313,0.134999821173104,-0.194999845035165,-0.165000035761116,-0.119999880796281,-0.117499958273724,-0.110000202646322,-0.107499934437955,-0.109999928477768,-0.100000000000000,-0.100000000000000,-0.0900000000000000,-0.0949999761592562,-0.0824998390749790,-0.0800000000000000,-0.0675001609250210,-0.0649999761592562,-0.0574998867564668,-0.0500000000000000,-0.0400000000000000,-0.0300000000000000,-0.0124999344379545,0.00500020264632248,0.0275000417262755,0.0649997615925615,0.100000035761115,0.145000309929670,0.189999988078207,0.224999666229586,0.252499970199070,0.270000000000000,0.275000000000000,0.250000214566695,0.197500232447252,0.114999761592563,0.0325003040057223,-0.0299992132554528,-0.0849997496721898,-0.105000023840744,-0.130000000000000,-0.130000000000000,-0.140000000000000,-0.130000000000000,-0.127500196709585,-0.120000000000000,-0.120000000000000,-0.110000000000000,-0.110000000000000,-0.105000000000000,-0.105000000000000,-0.100000000000000,-0.100000000000000,-0.100000000000000,-0.100000000000000,-0.104999821194421,-0.110000000000000,-0.110000000000000,-0.105000000000000,-0.114999773512934,-0.120000000000000,-0.115000000000000,-0.122500113257034,-0.115000000000000,-0.120000000000000];
data.ecg.v = data.ecg.v(:);
data.ecg.fs = (length(data.ecg.v)-1)/durn;
data.ecg.onset_time = 0;

fprintf('\n - Repeating pulse waves')
data = repeat_pulse_waves(data,up);

end

function data = repeat_pulse_waves(data,up)


waves = fieldnames(data);
t_offset = 0.25;
for wave_no = 1 : length(waves)
    curr_wave = waves{wave_no};
    
    % - Repeat pulse waves
    eval(['data.' curr_wave '.v = repmat(data.' curr_wave '.v, [up.no_pws,1]);']);
    
    % - Insert time vector and sampling freq
    eval(['time_of_second_pw = length(data.' curr_wave '.v)./(up.no_pws*data.' curr_wave '.fs);']);
    eval(['data.' curr_wave '.t = t_offset + data.' curr_wave '.onset_time - time_of_second_pw + [0:(length(data.' curr_wave '.v)-1)]./data.' curr_wave '.fs;']);
    eval(['data.' curr_wave '.t = data.' curr_wave '.t(:);']);
    if ~strcmp(curr_wave, 'ecg')
        eval(['min_val = min(data.' curr_wave '.v);']);
    else
        eval(['min_val = max(data.' curr_wave '.v);']);
        data.ecg.t = t_offset + data.ecg.t - data.ecg.t(find(data.ecg.v == min_val,1))-0.1; % 0.1 for pre-ejection period
    end
        
    eval(['data.' curr_wave '.dia_el = find(data.' curr_wave '.v == min_val & data.' curr_wave '.t>0, 2);']);
end


% % override ECG dia el
% data.ecg.t = data.ecg.t+0.188;
% [~, data.ecg.dia_el] = min(abs(data.ecg.t));

end

function data = load_data_from_file(up)

% Load file
load(up.paths.pwdb_data_file)
pwdb_data = data; clear data

% Extract required data
% - Specify virtual subject number
subj_no = 1; % corresponds to healthy 25 year old baseline subject
% - Carotid BP wave
data.bpc.v = pwdb_data.waves.P_Carotid{subj_no};
data.bpc.onset_time = pwdb_data.waves.onset_times.P_Carotid(subj_no);
% - Carotid U wave
data.uc.v = pwdb_data.waves.U_Carotid{subj_no};
data.uc.onset_time = pwdb_data.waves.onset_times.U_Carotid(subj_no);
% - Femoral BP wave
data.bpf.v = pwdb_data.waves.P_Femoral{subj_no};
data.bpf.onset_time = pwdb_data.waves.onset_times.P_Femoral(subj_no);
% - Brachial BP wave
data.bpb.v = pwdb_data.waves.P_Brachial{subj_no};
data.bpb.onset_time = pwdb_data.waves.onset_times.P_Brachial(subj_no);
    
waves = fieldnames(data);
for wave_no = 1 : length(waves)
    curr_wave = waves{wave_no};
    eval(['data.' curr_wave '.fs = pwdb_data.waves.fs;']);
end
    
clear pwdb_data

end

function data = load_hard_coded_data(up)

data.bpc.v = [74.8302707567689;74.8592309929699;75.0155444130006;75.3523873462690;75.8864852109108;76.5975875006631;77.4376930154961;78.3573005178788;79.3106588640326;80.2655172476873;81.2038752188317;82.1152325149592;82.9928389673156;83.8291943883963;84.6197986656983;85.3601516867190;86.0540035452106;86.7058543536759;87.3247043371206;87.9188037017999;88.4941525977174;89.0575011936274;89.6140996207832;90.1646978979352;90.7122961000854;91.2576442459842;91.7999923168811;92.3393403127761;92.8764382524197;93.4112861358119;93.9453840004537;94.4817319213468;95.0203298984914;95.5649280256397;96.1140262652908;96.6668745986942;97.2219729883491;97.7748213217525;98.3224195239027;98.8617675197978;99.3883651969348;99.9007125178129;100.395809407430;100.871405809535;101.324501649127;101.753596888703;102.155691453262;102.529285305303;102.871378369825;103.181220628077;103.457312042557;103.698902594516;103.905992283953;104.077831092119;104.215169037763;104.320256177136;104.393092510240;104.435178074574;104.448762926390;104.436097121940;104.398680698725;104.339513731746;104.260846277254;104.165678410253;104.055510168242;103.932591607473;103.799172784198;103.657503754667;103.508334537632;103.352415151842;103.191995653550;103.026326024004;102.856156281956;102.682986464906;102.506816572853;102.327646605799;102.146226582494;101.963306521687;101.779636442131;101.595216343823;101.412296283017;101.230126240961;101.050956273907;100.874786381855;100.703116602305;100.536696954009;100.377027474467;100.223358144929;100.077939021646;99.9415201233689;99.8133514313468;99.6941829643302;99.5855147598202;99.4865967990663;99.3974290820685;99.3195116463277;99.2513444543430;99.1929275061145;99.1457608391429;99.1075943971770;99.0799282177176;99.0620122820144;99.0530965713167;99.0539311043752;99.0630158436888;99.0811008080080;99.1066859598319;99.1397712991605;99.1803568259938;99.2269425028309;99.2795283296717;99.3373642877657;99.3989503396121;99.4642864852109;99.5326227058116;99.6032089826636;99.6737952595156;99.7443815363677;99.8142177944692;99.8818039963194;99.9463901231677;100.006476137513;100.062062039356;100.110897772444;100.152233318028;100.185318657357;100.208653752929;100.220738567245;100.221573100303;100.208907295853;100.181991135144;100.139324580675;100.079407594946;99.9999901217043;99.9010721609504;99.7796536376824;99.6349845331499;99.4648147911015;99.2668943552857;99.0412232257026;98.7885514211026;98.5156291102400;98.2277064243679;97.9270334197379;97.6143601151004;97.2926865854573;96.9672629620619;96.6478394886701;96.3539166527944;96.1132451482019;95.9603258374142;95.9214093766978;95.9934956910508;96.1360837679479;96.2944222386047;96.4212599217420;96.4933462360949;96.5046810316599;96.4597644209398;96.3713467226925;96.2499281994245;96.1067591323929;95.9470896528511;95.7746698545512;95.5947498687467;95.4125798266908;95.2326598408863;95.0572399675846;94.8855701880352;94.7176505022382;94.5534809101935;94.3938114306516;94.2386420636126;94.0879728090763;93.9448037420448;93.8091348625179;93.6832162267471;93.5685478722334;93.4651297989767;93.3744620444779;93.2950445712362;93.2268773792516;93.1684604310230;93.1175436702991;93.0726270595789;93.0314605426111;92.9925440818947;92.9551276586793;92.9177112354638;92.8780447559970;92.8368782390291;92.7934616658099;92.7462949988384;92.6953782381145;92.6414614023887;92.5837944729106;92.5223774496802;92.4579603514478;92.3897931594631;92.3201259299775;92.2467086067396;92.1717912460007;92.0953738477608;92.0167063932696;91.9365389012774;91.8548713717843;91.7732038422912;91.6907862940476;91.6083687458040;91.5267012163109;91.4450336868178;91.3641161760751;91.2831986653325;91.2037811920908;91.1236137000986;91.0441962268569;90.9640287348647;90.8823612053716;90.7999436571280;90.7167760901340;90.6306084481380;90.5436907873916;90.4537730516434;90.3623552783942;90.2694374676440;90.1742696006425;90.0783517148904;89.9809337916375;89.8827658496340;89.7845979076306;89.6864299656272;89.5875120048733;89.4900940816203;89.3926761583674;89.2967582726154;89.2015904056138;89.1086725948637;89.0165048028640;88.9258370483652;88.8374193501179;88.7505016893715;88.6650840661260;88.5811664803815;88.4994989508884;88.4193314588962;88.3414140231555;88.2642466061652;88.1893292454263;88.1151619034378;88.0432446177008;87.9728273694647;87.9031601399791;87.8349929479944;87.7675757747602;87.7016586390270;87.6364915220442;87.5728244425623;87.5091573630804;87.4469903210995;87.3848232791186;87.3234062558881;87.2627392514081;87.2020722469281;87.1421552611986;87.0814882567186;87.0215712709891;86.9616542852596;86.9017372995300;86.8410702950501;86.7804032905701;86.7197362860901;86.6583192628596;86.5969022396292;86.5339851788978;86.4710681181664;86.4081510574350;86.3437339592026;86.2793168609703;86.2133997252370;86.1474825895038;86.0800654162696;86.0118982242849;85.9437310323002;85.8733137840641;85.8028965358280;85.7309792500910;85.6583119456035;85.5841446036151;85.5092272428762;85.4328098446364;85.3556424276461;85.2769749731548;85.1975574999131;85.1166399891705;85.0349724596774;84.9510548739328;84.8671372881883;84.7817196649428;84.6948020041965;84.6063843059491;84.5179666077018;84.4280488719535;84.3366310987043;84.2452133254551;84.1522955147049;84.0586276852043;83.9642098369532;83.8690419699517;83.7738741029501;83.6772061984476;83.5805382939452;83.4838703894427;83.3864524661897;83.2890345429367;83.1908666009333;83.0926986589299;82.9945307169265;82.8971127936735;82.7989448516701;82.7007769096666;82.6026089676632;82.5051910444103;82.4077731211573;82.3103551979043;82.2129372746514;82.1162693701489;82.0196014656464;81.9229335611439;81.8270156753919;81.7310977896399;81.6359299226383;81.5407620556368;81.4463442073857;81.3511763403841;81.2575085108835;81.1638406813829;81.0701728518823;80.9772550411321;80.8843372303820;80.7914194196318;80.6992516276322;80.6078338543829;80.5156660623833;80.4249983078845;80.3335805346353;80.2429127801366;80.1529950443883;80.0630773086400;79.9731595728918;79.8839918558940;79.7948241388962;79.7064064406488;79.6179887424015;79.5303210629046;79.4419033646573;79.3549857039109;79.2673180244140;79.1804003636676;79.0942327216717;79.0073150609253;78.9211474189294;78.8357297956839;78.7495621536880;78.6641445304425;78.5794769259476;78.4940593027021;78.4093916982071;78.3254741124626;78.2408065079676;78.1568889222231;78.0729713364785;77.9890537507340;77.9058861837400;77.8219685979954;77.7388010310014;77.6563834827578;77.5732159157637;77.4907983675202;77.4083808192766;77.3259632710330;77.2442957415399;77.1626282120468;77.0809606825536;76.9992931530605;76.9183756423179;76.8374581315752;76.7565406208326;76.6763731288404;76.5962056368482;76.5160381448561;76.4358706528639;76.3564531796222;76.2770357063805;76.1983682518892;76.1189507786475;76.0410333429068;75.9623658884155;75.8844484526747;75.8065310169340;75.7286135811932;75.6514461642029;75.5742787472126;75.4978613489728;75.4214439507329;75.3450265524931;75.2686091542532;75.1929417747639;75.1172743952745;75.0416070157852;74.9681896925472;74.8985224630616];
data.bpc.onset_time = 0.0180;
data.bpc.fs = 500;

data.uc.v = [0.0399027000000000;0.0413179814634146;0.0447208629268293;0.0512565443902439;0.0616251258536585;0.0757811073170732;0.0930505887804878;0.112449870243902;0.132978851707317;0.153823833170732;0.174437814634146;0.194508796097561;0.213864777560976;0.232376759024390;0.249923740487805;0.266406721951220;0.281789703414634;0.296105684878049;0.309435666341463;0.321884647804878;0.333548629268293;0.344508610731707;0.354820592195122;0.364517573658537;0.373603555121951;0.382065536585366;0.389875518048781;0.397000499512195;0.403408480975610;0.409073462439024;0.413975443902439;0.418106425365854;0.421465406829268;0.424045388292683;0.425829369756098;0.426778351219512;0.426834332682927;0.425933314146341;0.424009295609756;0.421012277073171;0.416915258536585;0.411711240000000;0.405419221463415;0.398077202926829;0.389734184390244;0.380449165853659;0.370290147317073;0.359322128780488;0.347619110243902;0.335252091707317;0.322296073170732;0.308827054634146;0.294923036097561;0.280657017560976;0.266105999024390;0.251341980487805;0.236433961951220;0.221451943414634;0.206460924878049;0.191528906341463;0.176722887804878;0.162110869268293;0.147760850731707;0.133742832195122;0.120123813658537;0.106968795121951;0.0943407765853659;0.0822943580487805;0.0708797395121951;0.0601394209756098;0.0501086024390244;0.0408154839024390;0.0322808653658537;0.0245193468292683;0.0175392282926829;0.0113435097560976;0.00593051121951220;0.00129426268292683;-0.00257470585365854;-0.00568894439024390;-0.00806363292682927;-0.00971626146341463;-0.0106664200000000;-0.0109356385365854;-0.0105473570731707;-0.00952712560975610;-0.00790222414634146;-0.00570206268292683;-0.00295803121951219;0.000296540243902440;0.00402645170731707;0.00819477317073171;0.0127629946341463;0.0176911760975610;0.0229382575609756;0.0284622390243902;0.0342208204878049;0.0401711019512195;0.0462702834146341;0.0524761648780488;0.0587471463414634;0.0650426278048781;0.0713234092682927;0.0775516907317073;0.0836915721951220;0.0897089536585366;0.0955717351219512;0.101250016585366;0.106714998048781;0.111940979512195;0.116903960975610;0.121582942439024;0.125956923902439;0.130006905365854;0.133717886829268;0.137074868292683;0.140063849756098;0.142675831219512;0.144898812682927;0.146724794146341;0.148148775609756;0.149162757073171;0.149763738536585;0.149946720000000;0.149709701463415;0.149049682926829;0.147965664390244;0.146455645853659;0.144516627317073;0.142147608780488;0.139342590243902;0.136099571707317;0.132412553170732;0.128272534634146;0.123670516097561;0.118598497560976;0.113042479024390;0.106989460487805;0.100427441951220;0.0933510234146341;0.0857903048780488;0.0778429863414634;0.0696388678048781;0.0612736492682927;0.0528062307317073;0.0442964121951220;0.0358403936585366;0.0276124751219512;0.0199217565853659;0.0132595380487805;0.00827573951219512;0.00559183097560976;0.00544374243902439;0.00742051390243903;0.0105997453658537;0.0139950268292683;0.0169180082926829;0.0190518897560976;0.0203760712195122;0.0210671526829268;0.0213820341463415;0.0215485156097561;0.0217157970731707;0.0219708785365854;0.0223771600000000;0.0229945414634146;0.0238727229268293;0.0250357043902439;0.0264791858536585;0.0281816673170732;0.0301187487804878;0.0322703302439024;0.0346203117073171;0.0371558931707317;0.0398684746341464;0.0427529560975610;0.0458031375609756;0.0490055190243902;0.0523346004878049;0.0557539819512195;0.0592191634146341;0.0626805448780488;0.0660846263414634;0.0693758078048781;0.0725001892682927;0.0754104707317073;0.0780705521951220;0.0804562336585366;0.0825548151219512;0.0843622965853659;0.0858819780487805;0.0871225595121951;0.0880969409756098;0.0888212224390244;0.0893130039024390;0.0895904853658537;0.0896716668292683;0.0895738482926829;0.0893122297560976;0.0888999112195122;0.0883468926829268;0.0876607741463415;0.0868476556097561;0.0859126370731707;0.0848615185365854;0.0837007000000000;0.0824387814634146;0.0810858629268293;0.0796541443902439;0.0781568258536585;0.0766081073170732;0.0750217887804878;0.0734110702439024;0.0717879517073171;0.0701631331707317;0.0685457146341464;0.0669436960975610;0.0653642775609756;0.0638136590243903;0.0622980404878049;0.0608234219512195;0.0593957034146342;0.0580208848780488;0.0567052663414634;0.0554550478048781;0.0542763292682927;0.0531753107317073;0.0521577921951220;0.0512291736585366;0.0503943551219512;0.0496577365853659;0.0490227180487805;0.0484920995121951;0.0480675809756098;0.0477500624390244;0.0475395439024390;0.0474348253658537;0.0474342068292683;0.0475347882926829;0.0477328697560976;0.0480240512195122;0.0484030326829268;0.0488640141463415;0.0494002956097561;0.0500048770731707;0.0506703585365854;0.0513885400000000;0.0521516214634146;0.0529511029268293;0.0537787843902439;0.0546265658536585;0.0554863473170732;0.0563504287804878;0.0572115102439024;0.0580624917073171;0.0588968731707317;0.0597084546341464;0.0604917360975610;0.0612414175609756;0.0619530990243903;0.0626223804878049;0.0632457619512195;0.0638201434146342;0.0643425248780488;0.0648110063414634;0.0652235878048781;0.0655790692682927;0.0658763507317073;0.0661150321951220;0.0662949136585366;0.0664162951219512;0.0664796765853659;0.0664857580487805;0.0664356395121951;0.0663306209756098;0.0661723024390244;0.0659622839024390;0.0657022653658537;0.0653943468292683;0.0650404282926829;0.0646428097560976;0.0642035912195122;0.0637251726829268;0.0632099541463415;0.0626604356097561;0.0620792170731707;0.0614687985365854;0.0608319800000000;0.0601713614634146;0.0594898429268293;0.0587902243902439;0.0580753058536585;0.0573479873170732;0.0566111687804878;0.0558678502439024;0.0551207317073171;0.0543727131707317;0.0536266946341463;0.0528852760975610;0.0521512575609756;0.0514271390243902;0.0507154204878049;0.0500185019512195;0.0493384834146342;0.0486773648780488;0.0480372463414634;0.0474197278048781;0.0468264092682927;0.0462585907317073;0.0457175721951220;0.0452041536585366;0.0447192351219512;0.0442633165853659;0.0438369980487805;0.0434403795121951;0.0430735609756098;0.0427364424390244;0.0424288239024390;0.0421501053658537;0.0418997868292683;0.0416771682926829;0.0414814497560976;0.0413116312195122;0.0411666126829268;0.0410453941463415;0.0409466756097561;0.0408691570731707;0.0408114385365854;0.0407723200000000;0.0407502014634146;0.0407437829268293;0.0407515643902439;0.0407721458536585;0.0408042273170732;0.0408462087804878;0.0408967902439024;0.0409547717073171;0.0410187531707317;0.0410874346341463;0.0411597160975610;0.0412344975609756;0.0413105790243903;0.0413869604878049;0.0414627419512195;0.0415370234146342;0.0416090048780488;0.0416778863414634;0.0417430678048781;0.0418038492682927;0.0418599307317073;0.0419105121951220;0.0419554936585366;0.0419943751219512;0.0420270565853659;0.0420531380487805;0.0420726195121951;0.0420855009756098;0.0420915824390244;0.0420909639024390;0.0420837453658537;0.0420701268292683;0.0420502082926829;0.0420241897560976;0.0419923712195122;0.0419550526829268;0.0419125341463415;0.0418652156097561;0.0418132970731707;0.0417572785365854;0.0416974600000000;0.0416343414634146;0.0415683229268293;0.0414999043902439;0.0414292858536585;0.0413570673170732;0.0412836487804878;0.0412093302439024;0.0411346117073171;0.0410598931707317;0.0409854746341464;0.0409117560975610;0.0408389375609756;0.0407675190243903;0.0406976004878049;0.0406294819512195;0.0405634634146342;0.0404997448780488;0.0404384263414634;0.0403798078048781;0.0403238892682927;0.0402707707317073;0.0402205521951220;0.0401732336585366;0.0401289151219512;0.0400875965853659;0.0400492780487805;0.0400138595121951;0.0399812409756098;0.0399515224390244;0.0399244039024390;0.0398998853658537;0.0398779668292683;0.0398582482926829;0.0398408297560976;0.0398255112195122;0.0398121926829268;0.0398006741463415;0.0397908556097561;0.0397843370731707;0.0397889185365854;0.0398458000000000];
data.uc.onset_time = 0.0180;
data.uc.fs = 500;

data.bpf.v = [72.1125028125703;72.1605804743659;72.2483341280612;72.3828889517858;72.5711451180440;72.8197777937149;73.1344871213021;73.5199982189336;73.9794611653613;74.5143759980861;75.1241427021077;75.8076362493004;76.5593815027858;77.3748783500609;78.2466266036213;79.1671260759621;80.1288765795787;81.1213778519645;82.1378797243654;83.1701319905260;84.2106344629419;85.2533869916091;86.2923894265240;87.3238916739342;88.3441436400873;89.3516452874825;90.3433965411179;91.3186473822429;92.2766477921072;93.2173977707107;94.1408973180534;95.0471464341353;95.9368951377069;96.8101434287682;97.6668913073192;98.5071387733598;99.3308858268902;100.138132467910;100.928878696420;101.702374493669;102.457869840907;103.195364738133;103.913359147847;104.611103051299;105.288596448488;105.945089320664;106.579081630325;107.189073339972;107.775814468354;108.337804977971;108.875044868822;109.386034103407;109.871522700476;110.330010622528;110.762247888314;111.168234497833;111.547970451086;111.901455748073;112.229440407543;112.533424466999;112.813407926439;113.070140804615;113.304373120277;113.518354929676;113.712836251563;113.887817085938;114.046297507803;114.187527498406;114.314507132751;114.427236410837;114.526465351415;114.614444010735;114.690422370048;114.756650485605;114.813128357406;114.859855985451;114.898333407240;114.928560622775;114.950537632054;114.965014453829;114.971991088098;114.970717516113;114.962693775374;114.947919865880;114.924895750131;114.894371446877;114.857096974870;114.811572296607;114.759297449590;114.699522415068;114.631497174291;114.556721764759;114.473696148973;114.383920364432;114.286644392387;114.181868232837;114.070341904533;113.951315388724;113.826288722912;113.693761869594;113.555234866273;113.410707712948;113.259430390869;113.103652956287;112.941125352951;112.774097637112;112.601819790020;112.424291811675;112.242263720827;112.055735517476;111.864707201622;111.669178773265;111.469900251156;111.266121616544;111.057842869429;110.845814028562;110.629285075193;110.408256009320;110.182726830944;109.952697540066;109.717418117935;109.476888564550;109.230358861161;108.978579026519;108.720049023123;108.454768850973;108.182738510069;107.902457962909;107.613927209494;107.317146249824;107.010615046398;106.694333599216;106.366801870777;106.028769879831;105.679487607628;105.317455016667;104.943422125699;104.556638915973;104.157105387489;103.745571558997;103.321287411747;102.885752983241;102.439718292227;101.984683376208;101.522898291435;101.055863075409;100.585827784381;100.115042474602;99.6472572398252;99.1839721175511;98.7281871827818;98.2829025105190;97.8488681195132;97.4290840847663;97.0243004250289;96.6352671590512;96.2619842868334;95.9052018271260;95.5634197424279;95.2358880139887;94.9218566230579;94.6190755133842;94.3267946662170;94.0427640253050;93.7654835531472;93.4927031934923;93.2244229463401;92.9583927554393;92.6938626020395;92.4300824673902;92.1655523139903;91.9017721793410;91.6364920071907;91.3704618162899;91.1044316253892;90.8369013969875;90.5701211873362;90.3040909964355;90.0380608055347;89.7735306521349;89.5105005362360;89.2504704953390;88.9919404919430;88.7371605822992;88.4846307289069;88.2366009880174;87.9915713221298;87.7502917499945;87.5127622716115;87.2789828869809;87.0482035773522;86.8219243802263;86.5986452581023;86.3783662109801;86.1610872388598;85.9468083417414;85.7347795008744;85.5250007162588;85.3174719878946;85.1114432970313;84.9069146436690;84.7038860278076;84.5023574494472;84.3023289085877;84.1030503864786;83.9045218831201;83.7074934172624;83.5119649889057;83.3171865792995;83.1239082071942;82.9321298725899;82.7426015942369;82.5545733533849;82.3687951687843;82.1860170591856;82.0062390245887;81.8294610649938;81.6571832179016;81.4879054458113;81.3223777674734;81.1621002203887;81.0063227858069;80.8550454637278;80.7082682541516;80.5667411758287;80.4312142475095;80.3001874316931;80.1736607283795;80.0531341750697;79.9378577530132;79.8270814434595;79.7208052464085;79.6197791806109;79.5240032460666;79.4319774052746;79.3437016582349;79.2606760424485;79.1814005204145;79.1058750921328;79.0340997576034;78.9653244980760;78.9010493510513;78.8397742790285;78.7814992820076;78.7262243599886;78.6746995317219;78.6261747784570;78.5799000814436;78.5373754781826;78.4971009311729;78.4590764404147;78.4248020434088;78.3927777026542;78.3630034181512;78.3354791898995;78.3109550366496;78.2886809396512;78.2686568989042;78.2508829144086;78.2353589861644;78.2213350954212;78.2095612609293;78.1992874639384;78.1912637231989;78.1839900012099;78.1789663354723;78.1746926884851;78.1719190789989;78.1706455070136;78.1701219537788;78.1703484192944;78.1713249035606;78.1730514065771;78.1755279283442;78.1787544688617;78.1827310281297;78.1859575686472;78.1906841466657;78.1954107246842;78.1993872839522;78.2048638807211;78.2095904587396;78.2143170367580;78.2197936335270;78.2245202115454;78.2299968083144;78.2347233863328;78.2394499643513;78.2441765423698;78.2481531016378;78.2521296609058;78.2561062201738;78.2593327606913;78.2625593012088;78.2657858417263;78.2682623634934;78.2699888665100;78.2709653507761;78.2719418350422;78.2714182818074;78.2708947285726;78.2696211565873;78.2675975658516;78.2648239563653;78.2605503093782;78.2555266436405;78.2497529591525;78.2432292559139;78.2352055151744;78.2264317556844;78.2161579586935;78.2051341429521;78.1926102897098;78.1793364177170;78.1645625082233;78.1482885612286;78.1312645954835;78.1119905734870;78.0919665327400;78.0711924732425;78.0481683574936;78.0243942229943;77.9991200509940;77.9723458414928;77.9440715944906;77.9150473287380;77.8845230254844;77.8524986847299;77.8189743064744;77.7839498907181;77.7474254374608;77.7101509654530;77.6713764559442;77.6311019089346;77.5893273244240;77.5468027211629;77.5020280616504;77.4565033833875;77.4102286863741;77.3617039331093;77.3124291610940;77.2616543515778;77.2093795045606;77.1556046200425;77.1010797167739;77.0450547760044;76.9882798164845;76.9300048194636;76.8702297849417;76.8097047316694;76.7476796408961;76.6849045313724;76.6206293843478;76.5556042185726;76.4898290340470;76.4225538120205;76.3545285712435;76.2850032929655;76.2147279959371;76.1437026801583;76.0719273456289;75.9994019923491;75.9261266203188;75.8513512107876;75.7765758012563;75.7003003542242;75.6240249071920;75.5469994414094;75.4684739381258;75.3906984535927;75.3114229315587;75.2313973907742;75.1513718499897;75.0705962904547;74.9898207309197;74.9082951526343;74.8260195555984;74.7437439585625;74.6607183427761;74.5769427082392;74.4936170849527;74.4096914466657;74.3254658008786;74.2409401475913;74.1561144868038;74.0711388222662;73.9858631502284;73.9003624725655;73.8147117911525;73.7288361041143;73.6428854152011;73.5567847225378;73.4705340261244;73.3842083278359;73.2977326257974;73.2112569237589;73.1247062198453;73.0381555159317;72.9516798138932;72.8652791137297;72.7791784210664;72.6935277396533;72.6087020788658;72.5253014537042;72.4440758829190;72.3662253965108;72.2934750376059;72.2280748624555;72.1728749423115;72.1317003728013;72.1089762645526;72.1101027525688];
data.bpf.onset_time = 0.1220;
data.bpf.fs = 500;

data.bpb.v = [73.1809795244881;73.2507384026064;73.3897240113930;73.6179618514853;73.9554024216459;74.4191461493854;75.0212683365865;75.7692691707537;76.6605235862604;77.6882814143524;78.8382922987709;80.0910557520036;81.4248212302869;82.8140880961048;84.2371058056939;85.6713737965400;87.0996416373824;88.5046588969602;89.8766753315174;91.2066907160484;92.4894549192998;93.7234679037708;94.9057295944594;96.0369900101161;97.1187491882419;98.1525071663377;99.1382639444035;100.078269578691;100.974024106700;101.827027565933;102.637279956389;103.407031334320;104.137031718476;104.828781146358;105.481529599216;106.096777114550;106.676023729862;107.217769407650;107.724264204166;108.194758100660;108.632251172133;109.035993399835;109.408234840017;109.751225548931;110.067215582829;110.357704979210;110.624193775576;110.870432065680;111.097919887022;111.307407258352;111.501144235923;111.680630857235;111.846617141038;111.999103087333;112.139588733621;112.268074079901;112.383809107423;112.486793816187;112.577028206193;112.654512277441;112.719246029931;112.769729426162;112.806712484885;112.830195206100;112.839427571055;112.833659561001;112.814391213439;112.780872509618;112.733853468288;112.671834051949;112.596314298101;112.507294206745;112.404023759131;112.288002992758;112.158481888876;112.016210466237;111.860438706090;111.693416664685;111.513644304522;111.322621663103;111.121098759176;110.908325573993;110.685802145054;110.454278491109;110.213754612158;109.965730545703;109.710206291743;109.447931869028;109.179657296310;108.906132592339;108.628107775865;108.346332865639;108.060057842909;107.770782745178;107.478507572445;107.183232324711;106.885707020724;106.585931660487;106.284656262748;105.981130808758;105.676105317267;105.369579788275;105.061554221782;104.752778636539;104.442503013795;104.131477372300;103.819701712055;103.507926051810;103.195400372814;102.882874693819;102.571099033573;102.259323373328;101.948297731834;101.637272090339;101.327746486345;101.018970901102;100.711695353359;100.405169824368;100.100144332877;99.7951188413856;99.4915933873957;99.1888179521561;98.8860425169166;98.5832670816770;98.2804916464375;97.9769661924475;97.6726907197070;97.3654151719647;97.0566395867214;96.7441139077258;96.4270881162273;96.1048121934756;95.7765361207201;95.4407598604599;95.0959833751941;94.7407066274218;94.3734295796419;93.9934022131041;93.5991244903074;93.1898463925013;92.7655679196858;92.3262890718609;91.8727598677772;91.4064803449355;90.9312005970881;90.4506707179875;89.9716408763878;89.5001112222927;89.0473320369595;88.6230535641440;88.2392761038538;87.9049998810946;87.6284751021215;87.4164519356886;87.2696804005466;87.1866604591944;87.1613919616283;87.1878747578445;87.2548585665861;87.3540931815978;87.4743283216227;87.6088138179064;87.7500494829444;87.8920351667328;88.0310207755194;88.1640062343022;88.2894915055803;88.4059765518528;88.5142113918702;88.6119459693809;88.7014303406366;88.7826645056370;88.8548984456319;88.9196321981220;88.9783658006084;89.0295992155901;89.0763325180690;89.1178156892947;89.1547987480175;89.1872816942375;89.2167645654556;89.2424973429214;89.2644800266348;89.2834626353464;89.2979451315551;89.3094275527620;89.3171598802165;89.3211421139187;89.3221242726190;89.3193563375670;89.3143383462635;89.3078203174592;89.2998022511538;89.2910341660980;89.2822660810423;89.2749980334874;89.2684800046830;89.2634620133796;89.2606940783276;89.2594261807765;89.2604083394768;89.2628905356780;89.2661227506297;89.2708550030824;89.2755872555350;89.2810695267382;89.2865517979413;89.2905340316435;89.2945162653456;89.2969984615469;89.2979806202472;89.2982127601970;89.2961948438955;89.2919268713425;89.2861588612886;89.2788908137338;89.2686226911770;89.2568545311194;89.2420862960598;89.2250680047489;89.2057996571865;89.1842812533728;89.1597627745572;89.1329942394901;89.1032256294212;89.0719569818514;89.0376882592796;89.0011694804565;88.9624006453820;88.9221317728065;88.8803628627301;88.8363438964023;88.7908248925735;88.7445558699943;88.6967868099141;88.6475177123330;88.5982486147520;88.5474794796699;88.4967103445879;88.4444411720049;88.3921719994219;88.3384027893380;88.2846335792541;88.2293643316693;88.1740950840844;88.1173257989986;88.0598064951624;88.0015371725756;87.9417678124880;87.8804984148994;87.8177289798098;87.7534595072194;87.6876899971280;87.6196704307852;87.5494008081909;87.4776311480958;87.4028614129987;87.3265916404008;87.2480718115514;87.1665519077001;87.0827819475975;86.9960119124929;86.9069918211370;86.8157216735296;86.7214514509204;86.6249311720598;86.5261608369477;86.4251404455843;86.3211199792190;86.2155994753527;86.1070788964846;85.9970582801155;85.8847876074950;85.7710168973736;85.6557461497513;85.5389753646280;85.4207045420038;85.3009336818786;85.1804128030030;85.0591419053769;84.9371209890003;84.8151000726237;84.6915791187463;84.5688081836192;84.4452872297417;84.3217662758642;84.1982453219867;84.0747243681092;83.9519534329822;83.8291824978551;83.7071615814786;83.5851406651020;83.4631197487254;83.3425988698498;83.2220779909741;83.1023071308490;82.9832862894743;82.8642654480996;82.7459946254754;82.6284738216016;82.5109530177279;82.3941822326046;82.2781614662318;82.1628907186094;82.0476199709871;81.9323492233647;81.8185785132433;81.7040577843714;81.5910370930005;81.4772663828791;81.3649957102586;81.2527250376381;81.1404543650177;81.0289337111476;80.9181630760281;80.8073924409086;80.6966218057890;80.5873512081704;80.4780806105518;80.3688100129332;80.2610394528156;80.1532688926979;80.0462483513307;79.9399778287140;79.8344573248478;79.7296868397319;79.6256663733666;79.5223959257518;79.4191254781369;79.3173550680230;79.2163346766596;79.1160643040466;79.0165439501841;78.9185236338225;78.8205033174610;78.7232330198499;78.6274627597397;78.5324425183800;78.4374222770203;78.3439020731616;78.2511318880533;78.1591117216955;78.0678415740881;77.9773214452312;77.8875513351248;77.7977812250184;77.7095111524129;77.6219910985579;77.5344710447029;77.4477010095984;77.3624310119948;77.2764109956407;77.1918910167876;77.1081210566849;77.0243510965823;76.9413311552301;76.8590612326284;76.7775413287771;76.6960214249259;76.6160015585755;76.5359816922252;76.4559618258749;76.3774419970255;76.2989221681761;76.2219023768277;76.1448825854793;76.0678627941308;75.9923430402833;75.9175733051863;75.8428035700893;75.7687838537427;75.6955141561466;75.6222444585505;75.5504747984553;75.4787051383602;75.4076854970155;75.3366658556708;75.2671462518270;75.1976266479833;75.1288570628900;75.0600874777967;74.9920679114539;74.9247983638615;74.8575288162692;74.7910092874273;74.7244897585854;74.6587202484940;74.5929507384026;74.5279312470616;74.4632117632209;74.3986422831302;74.3342978086647;74.2702533416994;74.2064338803592;74.1427644227691;74.0793199708041;74.0161005244643;73.9530310818746;73.8900366411599;73.8271922041953;73.7644227691058;73.7017283358913;73.6391089045519;73.5764894732124;73.5140950474981;73.4520756311591;73.3910312391956;73.3323869072336;73.2786176971497;73.2344487270718;73.2070801770044];
data.bpb.onset_time = 0.0600;
data.bpb.fs = 500;

end

function plot_handle = make_plot(data, up)

fprintf('\n - Making figure')

%% make figure 

% setup
paper_size = [1600,450];
figure('Position', [50,50, paper_size])
ftsize = 16;
t_lim = [0 1.5];

%- multiple sites

subplot('Position', [0.08,0.16,0.25,0.75])

plot(data.bpc.t, data.bpc.v, 'b', 'LineWidth', 2), hold on
plot(data.bpf.t, data.bpf.v, 'r', 'LineWidth', 2),

xlim(t_lim), ylim([60, 130])
xlabel('Time (s)', 'FontSize', ftsize)
ylab = ylabel({'Pressure', '(mmHg)'}, 'FontSize', ftsize, 'Rotation', 0);
set(ylab, 'Units', 'Normalized', 'Position', [-0.18, 0.5, 0]);
set(gca, 'FontSize', ftsize)
legend({'Carotid BP', 'Femoral BP'})

bp_level = 70;
for pw_no = 1 : 2
    ah = annotation('doublearrow',[0.8,0.8],[0.2,0.8], 'Head1Length', 5, 'Head2Length', 5);
    set(ah,'parent',gca); set(ah,'position',[data.bpc.t(data.bpc.dia_el(pw_no)), bp_level, data.bpf.t(data.bpf.dia_el(pw_no))-data.bpc.t(data.bpc.dia_el(pw_no)),0]);
    ah = text(0.81, 0.8, '\DeltaT','FontSize', ftsize, 'Color', 'k');
    set(ah,'parent',gca); set(ah,'position',[data.bpc.t(data.bpc.dia_el(pw_no)), bp_level-5,0]);
end

title('PWV measurement between two sites: simultaneous', 'FontSize', ftsize)
box off

%- gated

subplot('Position', [0.38,0.16,0.25,0.75])

plot(data.bpc.t, data.bpc.v, 'b', 'LineWidth', 2), hold on
plot(data.bpf.t, data.bpf.v, 'r', 'LineWidth', 2),
plot(data.ecg.t, 40+20*data.ecg.v, 'color', [0 .5 0], 'LineWidth', 2)

xlim(t_lim), ylim([30, 140])
xlabel('Time (s)', 'FontSize', ftsize)
set(gca, 'FontSize', ftsize, 'YTick', [])
legend({'Carotid BP', 'Femoral BP', 'ECG'})

for pw_no = 1 : 2
    bp_level = 72;
    ah = annotation('doublearrow',[0.8,0.8],[0.2,0.8], 'Head1Length', 5, 'Head2Length', 5);
    set(ah,'parent',gca); set(ah,'position',[data.ecg.t(data.ecg.dia_el(pw_no)), bp_level, data.bpc.t(data.bpc.dia_el(pw_no))-data.ecg.t(data.ecg.dia_el(pw_no)),0]);
    ah = text(0.81, 0.8, '\DeltaT_1','FontSize', ftsize, 'Color', 'k');
    set(ah,'parent',gca); set(ah,'position',[data.ecg.t(data.ecg.dia_el(pw_no))+0.05, bp_level+12,0], 'HorizontalAlignment', 'center');
    
    bp_level = 68;
    ah = annotation('doublearrow',[0.8,0.8],[0.2,0.8], 'Head1Length', 5, 'Head2Length', 5);
    set(ah,'parent',gca); set(ah,'position',[data.ecg.t(data.ecg.dia_el(pw_no)), bp_level, data.bpf.t(data.bpc.dia_el(pw_no))-data.ecg.t(data.ecg.dia_el(pw_no)),0]);
    ah = text(0.81, 0.8, '\DeltaT_2','FontSize', ftsize, 'Color', 'k');
    set(ah,'parent',gca); set(ah,'position',[data.ecg.t(data.ecg.dia_el(pw_no))+0.1, bp_level-8,0], 'HorizontalAlignment', 'center');
end

ah = text(0.81, 0.8, '\DeltaT = \DeltaT_2 - \DeltaT_1','FontSize', ftsize, 'Color', 'k');
set(ah,'parent',gca); set(ah,'position',[data.ecg.t(data.ecg.dia_el(1))+0.2, 125,0]);

title('PWV measurement between two sites: synchronous', 'FontSize', ftsize)
box off

%- single site

subplot('Position', [0.72,0.16,0.25,0.75])

plot(data.uc.v, data.bpc.v, 'b', 'LineWidth', 2), hold on
rel_els = data.bpc.dia_el(1):data.bpc.dia_el(1)+round(data.bpc.fs/25);
plot(data.uc.v(rel_els), data.bpc.v(rel_els), 'r', 'LineWidth', 2)

set(gca, 'FontSize', ftsize, 'YTick', 70:10:110)
xlabel('Blood flow velocity (m/s)', 'FontSize', ftsize)
ylim([70, 110])
xlim([-0.05, 0.45])
ylab = ylabel({'Pressure', '(mmHg)'}, 'FontSize', ftsize, 'Rotation', 0);
set(ylab, 'Units', 'Normalized', 'Position', [-0.15, 0.56, 0]);

ah = text(0.81, 0.8, {'Linear portion', 'analysed to', 'estimate PWV'},'FontSize', ftsize, 'Color', 'r');
set(ah,'parent',gca); set(ah,'position',[min(data.uc.v)+0.2, 78,0]);

title('PWV measurement at a single site', 'FontSize', ftsize)
box off

dim = [.01 .9 .1 .1];
str = '(a)';
annotation('textbox',dim,'String',str,'FitBoxToText','on', 'LineStyle', 'none', 'FontSize', ftsize);
dim = [.35 .9 .1 .1];
str = '(b)';
annotation('textbox',dim,'String',str,'FitBoxToText','on', 'LineStyle', 'none', 'FontSize', ftsize);
dim = [.65 .9 .1 .1];
str = '(c)';
annotation('textbox',dim,'String',str,'FitBoxToText','on', 'LineStyle', 'none', 'FontSize', ftsize);

%- store plot handle
plot_handle = gcf;

end

function save_plot(plot_handle, up)

save_path = [up.paths.save_path, 'pwv_measurement_fig'];
print(plot_handle, save_path, '-depsc')
print(plot_handle, '-dsvg', save_path)
fid = fopen([save_path, '.txt'], 'w');
fprintf(fid, ['Created using ' mfilename, ', ', date]);
fclose(fid);

end